var gdjs;(function(u){const c=["atlas"];class p{constructor(e,s){this._loadedSpineAtlases=new u.ResourceCache;this._loadingSpineAtlases=new u.ResourceCache;this._resourceLoader=e,this._imageManager=s}getResourceKinds(){return c}async processResource(e){}async loadResource(e){await this.getOrLoad(e)}getOrLoad(e){const s=this._getAtlasResource(e);if(!s)return Promise.reject(`Unable to find atlas for resource '${e}'.`);let a=this._loadingSpineAtlases.get(s);return a||(a=new Promise((i,r)=>{const o=(n,t)=>{if(n)return r(`Error while preloading a spine atlas resource: ${n}`);if(!t)return r(`Cannot reach texture atlas for resource '${e}'.`);i(t)};this.load(s,o)}),this._loadingSpineAtlases.set(s,a)),a}load(e,s){const a=this._resourceLoader.getRuntimeGame(),i=a.getEmbeddedResourcesNames(e.name);if(!i.length)return s(new Error(`${e.name} do not have image metadata!`));const r=i.reduce((t,l)=>{const d=a.resolveEmbeddedResource(e.name,l);return t[l]=this._imageManager.getOrLoadPIXITexture(d),t},{}),o=t=>{this._loadedSpineAtlases.set(e,t),s(null,t)},n=this._resourceLoader.getFullUrl(e.file);PIXI.Assets.setPreferences({preferWorkers:!1,crossOrigin:this._resourceLoader.checkIfCredentialsRequired(n)?"use-credentials":"anonymous"}),PIXI.Assets.add({alias:e.name,src:n,data:{images:r}}),PIXI.Assets.load(e.name).then(t=>{typeof t=="string"?new pixi_spine.TextureAtlas(t,(l,d)=>d(r[l].baseTexture),o):o(t)})}isLoaded(e){return!!this._loadedSpineAtlases.getFromName(e)}getAtlasTexture(e){return this._loadedSpineAtlases.getFromName(e)}_getAtlasResource(e){const s=this._resourceLoader.getResource(e);return s&&this.getResourceKinds().includes(s.kind)?s:null}dispose(){this._loadedSpineAtlases.clear(),this._loadingSpineAtlases.clear()}unloadResourcesList(e){e.forEach(s=>{const a=this._loadedSpineAtlases.get(s);a&&(a.dispose(),this._loadedSpineAtlases.delete(s));const i=this._loadingSpineAtlases.get(s);i&&(i.then(r=>r.dispose()),this._loadingSpineAtlases.delete(s))})}}u.SpineAtlasManager=p})(gdjs||(gdjs={}));
//# sourceMappingURL=pixi-spine-atlas-manager.js.map
